# Mining Reliability Database - Environment Configuration
# All settings managed through unified configs/environment.py gateway

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Neo4j connection settings
NEO4J_URI=bolt://localhost:7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=password

# Database connection tuning
CONNECTION_TIMEOUT=30
MAX_RETRIES=3

# =============================================================================
# DATA PROCESSING PARAMETERS
# =============================================================================

# ETL batch processing settings
BATCH_SIZE=5000

# Data directory path
DATA_DIR=./data/facility_data

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Optional log file path (leave empty for console only)
# LOG_FILE=/path/to/mining_reliability.log

# =============================================================================
# CAUSAL INTELLIGENCE CONFIGURATION
# =============================================================================

# Root cause extraction delimiters (comma-separated)
# Used for automated primary/secondary cause analysis
ROOT_CAUSE_DELIMITERS=";,|,\n, - , / , and , & "

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# Performance tuning for large datasets
# BATCH_SIZE=10000
# CONNECTION_TIMEOUT=60

# Debug configuration
# LOG_LEVEL=DEBUG
# LOG_FILE=./logs/debug.log

# Custom data directory
# DATA_DIR=/custom/path/to/facility_data

# =============================================================================
# DEVELOPMENT ENVIRONMENT OVERRIDES
# =============================================================================

# Development database (if different from production)
# DEV_NEO4J_URI=bolt://dev-server:7687
# DEV_NEO4J_USER=dev_user
# DEV_NEO4J_PASSWORD=dev_password

# Test environment settings
# TEST_BATCH_SIZE=100
# TEST_LOG_LEVEL=DEBUG

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Docker Neo4j settings (for containerized deployment)
# DOCKER_NEO4J_AUTH=neo4j/docker_password
# DOCKER_NEO4J_PORTS=7474:7474,7687:7687

# =============================================================================
# OPERATIONAL INTELLIGENCE FEATURES
# =============================================================================

# Enable/disable advanced analytics features
# ENABLE_CAUSAL_CORRELATION=true
# ENABLE_PERFORMANCE_METRICS=true
# ENABLE_QUALITY_SCORING=true

# Analytics processing parameters
# CAUSAL_ANALYSIS_THRESHOLD=3
# PATTERN_FREQUENCY_MINIMUM=2

# =============================================================================
# QUALITY ASSURANCE SETTINGS
# =============================================================================

# Data validation thresholds
# MIN_FIELD_COMPLETENESS=0.7
# MAX_MISSING_DATA_RATIO=0.3

# Entity creation requirements
# REQUIRED_FIELD_COVERAGE=0.8
# SKIP_INCOMPLETE_RECORDS=false

# =============================================================================
# PRODUCTION DEPLOYMENT SETTINGS
# =============================================================================

# Production environment markers
# ENVIRONMENT=production
# DEPLOYMENT_REGION=us-west-2

# Resource limits for production
# MAX_CONCURRENT_CONNECTIONS=50
# QUERY_TIMEOUT=300

# Monitoring and alerting
# ENABLE_PERFORMANCE_MONITORING=true
# ALERT_ON_ERRORS=true

# =============================================================================
# CONFIGURATION NOTES
# =============================================================================

# 1. All configuration accessed through configs/environment.py gateway
# 2. Environment variables override default values in constants.py
# 3. Command line arguments override environment variables
# 4. No hardcoded values in source code - all externalized here
# 5. Use make validate-config to verify configuration loading

# =============================================================================
# SECURITY CONSIDERATIONS
# =============================================================================

# 1. Never commit .env files with real passwords to version control
# 2. Use environment-specific .env files (.env.production, .env.development)
# 3. Rotate database passwords regularly
# 4. Use secure connection strings (bolt+s://) for production
# 5. Limit database user permissions to minimum required
